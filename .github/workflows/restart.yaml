name: Restart

on:  
  workflow_dispatch:
    inputs:
      server_name:
        description: 'Server to start:'
        required: true
        type: choice
        options:
        - 'olololo.lol'
        - 'test_list.srv1'
        - 'test_list.srv2'
      force_restart:
        description: 'Restart if already running'
        required: false
        type: boolean
jobs:
  start-yc-server:
    runs-on: ubuntu-latest
    steps:
      - name: Get inputs for workflow and run
        env:
          SERVER_TO_START: ${{ inputs.server_name }}
          FORCE_RESTART: ${{ inputs.force_restart }}
          YC_TKN: ${{ secrets.YC_TOKEN }}
          YC: /tmp/yc/bin/yc
        run: |
          LOG="restart.yaml>"
          echo "$LOG Server to start: $SERVER_TO_START"
          echo "$LOG Force restart checkbox: $FORCE_RESTART"
          if [[ $SERVER_TO_START != "olololo.lol" ]];then
          echo "$LOG The $SERVER_TO_START not availible. Exit."
          fi
          echo "$LOG install yc"
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /tmp/yc -n
          $YC config set token $YC_TKN
          NEED_TO_START=true
          NEED_TO_STOP=false
          id=epdlpva9bbq9kp0euuhn
          status=$($YC compute instance get $id | awk -F: '$1 == "status" {print$2}')
          if [[ $status == " RUNNING" ]];then
          echo "$LOG Server $SERVER_TO_START is already running."
          NEED_TO_START=false
          if [[ $FORCE_RESTART == "true" ]]; then
          NEED_TO_START=true
          NEED_TO_STOP=true
          fi
          fi

          if [[ $NEED_TO_STOP == "true" ]];then
          $YC compute instance stop $id > /dev/null
          wait $!
          echo "$LOG Server $SERVER_TO_START was stopped."
          fi

          if [[ $NEED_TO_START == "true" ]];then
          $YC compute instance start $id > /dev/null
          wait $!
          echo "$LOG Server $SERVER_TO_START instance was started."

          echo "$LOG Waiting Game Server to start"
          MAX_TIME_TO_WAIT=600
          TIME_WAITING=0
          
          while [ $(nc -z -w 3 olololo.lol 80; echo $?;) != "0" ]
          do
          echo -n "."
          if [[ $(($TIME_WAITING%9)) -eq 0 ]]; then
          echo -n "$TIME_WAITING"
          fi
          TIME_WAITING=$(($TIME_WAITING+3))
          if [ $TIME_WAITING -ge $MAX_TIME_TO_WAIT ]; then
          echo "$LOG TIME_WAITING = $TIME_WAITING"
          echo "$LOG MAX_TIME_TO_WAIT = $MAX_TIME_TO_WAIT"
          echo "$LOG ERROR: Too much time to wait for game server warmup. Exit."
          exit 1
          fi
          done
          echo "$LOG Game server was startdet on $SERVER_TO_START. Exit."
          
          else
          echo "$LOG Do not need to restart. Exit."
          fi
